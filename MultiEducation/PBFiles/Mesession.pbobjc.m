// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MESession.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "Mesession.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - MesessionRoot

@implementation MesessionRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - MesessionRoot_FileDescriptor

static GPBFileDescriptor *MesessionRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - MESession

@implementation MESession

@dynamic id_p;
@dynamic userId;
@dynamic type;
@dynamic msId;
@dynamic msName;
@dynamic sessionId;
@dynamic modifiedDate;
@dynamic dataStatus;
@dynamic timestamp;
@dynamic readId;
@dynamic lastId;

typedef struct MESession__storage_ {
  uint32_t _has_storage_[1];
  int32_t type;
  int32_t dataStatus;
  NSString *msName;
  int64_t id_p;
  int64_t userId;
  int64_t msId;
  int64_t sessionId;
  int64_t modifiedDate;
  int64_t timestamp;
  int64_t readId;
  int64_t lastId;
} MESession__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = MESession_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MESession__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = MESession_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MESession__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = MESession_FieldNumber_Type,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(MESession__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msId",
        .dataTypeSpecific.className = NULL,
        .number = MESession_FieldNumber_MsId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(MESession__storage_, msId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "msName",
        .dataTypeSpecific.className = NULL,
        .number = MESession_FieldNumber_MsName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(MESession__storage_, msName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = MESession_FieldNumber_SessionId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(MESession__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "modifiedDate",
        .dataTypeSpecific.className = NULL,
        .number = MESession_FieldNumber_ModifiedDate,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(MESession__storage_, modifiedDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "dataStatus",
        .dataTypeSpecific.className = NULL,
        .number = MESession_FieldNumber_DataStatus,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(MESession__storage_, dataStatus),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "timestamp",
        .dataTypeSpecific.className = NULL,
        .number = MESession_FieldNumber_Timestamp,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(MESession__storage_, timestamp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "readId",
        .dataTypeSpecific.className = NULL,
        .number = MESession_FieldNumber_ReadId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(MESession__storage_, readId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "lastId",
        .dataTypeSpecific.className = NULL,
        .number = MESession_FieldNumber_LastId,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(MESession__storage_, lastId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MESession class]
                                     rootClass:[MesessionRoot class]
                                          file:MesessionRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MESession__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\002\006\000\004\004\000\005\006\000\006\t\000\007\014\000\010\n\000\n\006\000\013\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
