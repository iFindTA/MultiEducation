// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MEPhoneInfo.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "MephoneInfo.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - MephoneInfoRoot

@implementation MephoneInfoRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - MephoneInfoRoot_FileDescriptor

static GPBFileDescriptor *MephoneInfoRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - MEPBPhoneInfo

@implementation MEPBPhoneInfo

@dynamic deviceId;
@dynamic subscriberId;
@dynamic model;
@dynamic brand;
@dynamic number;
@dynamic appVersion;
@dynamic osVersion;

typedef struct MEPBPhoneInfo__storage_ {
  uint32_t _has_storage_[1];
  NSString *deviceId;
  NSString *subscriberId;
  NSString *model;
  NSString *brand;
  NSString *number;
  NSString *appVersion;
  NSString *osVersion;
} MEPBPhoneInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "deviceId",
        .dataTypeSpecific.className = NULL,
        .number = MEPBPhoneInfo_FieldNumber_DeviceId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MEPBPhoneInfo__storage_, deviceId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "subscriberId",
        .dataTypeSpecific.className = NULL,
        .number = MEPBPhoneInfo_FieldNumber_SubscriberId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MEPBPhoneInfo__storage_, subscriberId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "model",
        .dataTypeSpecific.className = NULL,
        .number = MEPBPhoneInfo_FieldNumber_Model,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(MEPBPhoneInfo__storage_, model),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "brand",
        .dataTypeSpecific.className = NULL,
        .number = MEPBPhoneInfo_FieldNumber_Brand,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(MEPBPhoneInfo__storage_, brand),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "number",
        .dataTypeSpecific.className = NULL,
        .number = MEPBPhoneInfo_FieldNumber_Number,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(MEPBPhoneInfo__storage_, number),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appVersion",
        .dataTypeSpecific.className = NULL,
        .number = MEPBPhoneInfo_FieldNumber_AppVersion,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(MEPBPhoneInfo__storage_, appVersion),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "osVersion",
        .dataTypeSpecific.className = NULL,
        .number = MEPBPhoneInfo_FieldNumber_OsVersion,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(MEPBPhoneInfo__storage_, osVersion),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MEPBPhoneInfo class]
                                     rootClass:[MephoneInfoRoot class]
                                          file:MephoneInfoRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MEPBPhoneInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001\010\000\002\014\000\006\n\000\007\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
