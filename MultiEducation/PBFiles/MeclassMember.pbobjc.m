// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MEClassMember.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "MeclassMember.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - MeclassMemberRoot

@implementation MeclassMemberRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - MeclassMemberRoot_FileDescriptor

static GPBFileDescriptor *MeclassMemberRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - MEClassMember

@implementation MEClassMember

@dynamic id_p;
@dynamic classId;
@dynamic name;
@dynamic portrait;
@dynamic userType;
@dynamic gender;
@dynamic schoolName;
@dynamic status;
@dynamic timestamp;
@dynamic studentName;

typedef struct MEClassMember__storage_ {
  uint32_t _has_storage_[1];
  int32_t userType;
  int32_t gender;
  int32_t status;
  NSString *name;
  NSString *portrait;
  NSString *schoolName;
  NSString *studentName;
  int64_t id_p;
  int64_t classId;
  int64_t timestamp;
} MEClassMember__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = MEClassMember_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MEClassMember__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "classId",
        .dataTypeSpecific.className = NULL,
        .number = MEClassMember_FieldNumber_ClassId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MEClassMember__storage_, classId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = MEClassMember_FieldNumber_Name,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(MEClassMember__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "portrait",
        .dataTypeSpecific.className = NULL,
        .number = MEClassMember_FieldNumber_Portrait,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(MEClassMember__storage_, portrait),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userType",
        .dataTypeSpecific.className = NULL,
        .number = MEClassMember_FieldNumber_UserType,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(MEClassMember__storage_, userType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "gender",
        .dataTypeSpecific.className = NULL,
        .number = MEClassMember_FieldNumber_Gender,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(MEClassMember__storage_, gender),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "schoolName",
        .dataTypeSpecific.className = NULL,
        .number = MEClassMember_FieldNumber_SchoolName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(MEClassMember__storage_, schoolName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = MEClassMember_FieldNumber_Status,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(MEClassMember__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "timestamp",
        .dataTypeSpecific.className = NULL,
        .number = MEClassMember_FieldNumber_Timestamp,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(MEClassMember__storage_, timestamp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "studentName",
        .dataTypeSpecific.className = NULL,
        .number = MEClassMember_FieldNumber_StudentName,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(MEClassMember__storage_, studentName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MEClassMember class]
                                     rootClass:[MeclassMemberRoot class]
                                          file:MeclassMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MEClassMember__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\002\007\000\005\010\000\007\n\000\n\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MEClassMemberList

@implementation MEClassMemberList

@dynamic classUserArray, classUserArray_Count;
@dynamic classIds;
@dynamic timestamp;

typedef struct MEClassMemberList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *classUserArray;
  NSString *classIds;
  int64_t timestamp;
} MEClassMemberList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "classUserArray",
        .dataTypeSpecific.className = GPBStringifySymbol(MEClassMember),
        .number = MEClassMemberList_FieldNumber_ClassUserArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(MEClassMemberList__storage_, classUserArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "classIds",
        .dataTypeSpecific.className = NULL,
        .number = MEClassMemberList_FieldNumber_ClassIds,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MEClassMemberList__storage_, classIds),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "timestamp",
        .dataTypeSpecific.className = NULL,
        .number = MEClassMemberList_FieldNumber_Timestamp,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MEClassMemberList__storage_, timestamp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MEClassMemberList class]
                                     rootClass:[MeclassMemberRoot class]
                                          file:MeclassMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MEClassMemberList__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\000classUser\000\002\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
